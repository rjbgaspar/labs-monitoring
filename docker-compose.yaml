version: "3.2"

networks:
  microservices-monitoring:

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - cadvisor
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # Copy configurations files
      - ./prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --web.enable-lifecycle
    networks:
      - microservices-monitoring
#    restart: always
#    deploy:
#      mode: global

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - --config.file=/etc/alertmanager/config.yml
      - --storage.path=/alertmanager
    networks:
      - microservices-monitoring
#  restart: always
#    deploy:
#      mode: global

  # See https://hub.docker.com/r/skandyla/alertmanager-discord/
  alertmanager-discord:
    image: skandyla/alertmanager-discord
    container_name: alertmanager-discord
    environment:
      DISCORD_WEBHOOK: ${DISCORD_WEBHOOK}
      DISCORD_NAME: ${DISCORD_NAME}
    ports:
      - 9095:9095
    networks:
      - microservices-monitoring
  #  restart: always
  #    deploy:
  #      mode: global

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8090:8090
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - microservices-monitoring
#  restart: always
#    deploy:
#      mode: global

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - microservices-monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      - microservices-monitoring

  grafana:
    # Compatibility issues with camptocamp-prometheus-alertmanager-datasource
    # Wait for the merge of PR fix issue regarding grafana 6.7 / cleanup datasource request
    image: grafana/grafana:6.6.2
#    image: grafana/grafana:master
    depends_on:
      - prometheus
    container_name: grafana
    environment:
      GF_INSTALL_PLUGINS: ${GF_INSTALL_PLUGINS}
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/:/etc/grafana/
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - microservices-monitoring
