global:

  #
  # Internal SMTP allow anonymous access
  #
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'gvsrv01:25'
  smtp_from: 'gvadmin@grupo-valco.com'
  # level=error ts=2020-04-06T10:40:31.089Z caller=notify.go:372 component=dispatcher msg="Error on notify" err="find
  # auth mechanism: unknown auth mechanism: NTLM" context_err="context deadline exceeded"
  # smtp_auth_username: 'GV\GVAdmin'
  # smtp_auth_password: 'Valco123!'

  # Using mail.coimfor.pt tested at 2020-04-06 and it's ok
#  smtp_smarthost: '89.26.253.160:25'
#  smtp_from: 'site@grupo-valco.pt'
#  smtp_auth_username: 'site@grupo-valco.pt'
#  smtp_auth_password: 'Site@valco123'


  smtp_require_tls: false

  slack_api_url: 'https://hooks.slack.com/services/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'

# The root route on which each incoming alert enters.
route:

  #
  # A default receiver
  #
  # The root route must not have any matchers as it is the entry point for
  # all alerts. It needs to have a receiver configured so alerts that do not
  # match any of the sub-routes are sent to someone.
  receiver: 'team-X-mails'

  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname', 'cluster']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
#  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
#  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
#  repeat_interval: 3h

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.

  # The child route trees.
#  routes:
#    # This routes performs a regular expression match on alert labels to
#    # catch alerts that are related to a list of services.
#    - match_re:
#        service: ^(foo1|foo2|baz)$
#      receiver: team-X-mails
#
#      # The service has a sub-route for critical alerts, any alerts
#      # that do not match, i.e. severity != critical, fall-back to the
#      # parent node and are sent to 'team-X-mails'
#      routes:
#        - match:
#            severity: critical
#          receiver: team-X-pager
#
#    - match:
#        service: files
#      receiver: team-Y-mails
#
#      routes:
#        - match:
#            severity: critical
#          receiver: team-Y-pager
#
#    # This route handles all alerts coming from a database service. If there's
#    # no team to handle it, it defaults to the DB team.
#    - match:
#        service: database
#
#      receiver: team-DB-pager
#      # Also group alerts by affected database.
#      group_by: [alertname, cluster, database]
#
#      routes:
#        - match:
#            owner: team-X
#          receiver: team-X-pager
#
#        - match:
#            owner: team-Y
#          receiver: team-Y-pager


# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is
# already critical.
#inhibit_rules:
#  - source_match:
#      severity: 'critical'
#    target_match:
#      severity: 'warning'
#    # Apply inhibition if the alertname is the same.
#    equal: ['alertname']


receivers:
  - name: 'team-X-mails'
    email_configs:
      - to: 'ricardo.gaspar@grupo-valco.com'

#  - name: 'team-X-pager'
#    email_configs:
#      - to: 'team-X+alerts-critical@example.org'
#    pagerduty_configs:
#      - service_key: <team-X-key>
#
#  - name: 'team-Y-mails'
#    email_configs:
#      - to: 'team-Y+alerts@example.org'
#
#  - name: 'team-Y-pager'
#    pagerduty_configs:
#      - service_key: <team-Y-key>
#
#  - name: 'team-DB-pager'
#    pagerduty_configs:
#      - service_key: <team-DB-key>

#  - name: 'discord-webhook'
    webhook_configs:
      - url: 'http://alertmanager-discord:9095'

